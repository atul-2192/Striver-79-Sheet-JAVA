  public int minEatingSpeed(int[] piles, int h) {
         int n=piles.length;
        int low=1;
        int high=0;
        for(int i=0;i<n;i++)
        {
            high=Math.max(high, piles[i]);
        }

        int ans=Integer.MAX_VALUE;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            long  count=0;
           
            for(int i=0;i<n;i++)
            {  count+=(piles[i]/mid);
                if(piles[i]%mid!=0) count++;
            }
            if(count<=h) ans=Math.min(ans,mid);
            if(count<=h) high=mid-1;
            else low=mid+1;
        }
        return ans;
    }
