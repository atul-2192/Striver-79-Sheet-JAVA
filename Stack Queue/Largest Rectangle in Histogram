public int largestRectangleArea(int[] heights) {
        int n=heights.length;

        int maxArea=0;
        Stack<Integer> st= new Stack<>();
        for(int i=0;i<n;i++)
        {
            while(!st.isEmpty()&&heights[st.peek()]>heights[i])
            {
                int curr=st.peek();
                st.pop();
                int prev=-1;
                if(!st.isEmpty())
                {
                    prev=st.peek();
                }
                int width=i-prev-1;
                maxArea=Math.max(maxArea,width*heights[curr]);
            }

            st.push(i);
        }

        int i=n;
         while(!st.isEmpty()&&heights[st.peek()]>0)
            {
                int curr=st.peek();
                st.pop();
                int prev=-1;
                if(!st.isEmpty())
                {
                    prev=st.peek();
                }
                int width=i-prev-1;
                maxArea=Math.max(maxArea,width*heights[curr]);
            }
            return maxArea;
    }
